const mCategoria = require('../models/categoryModel');

// Funci칩n 1: Listar todas las categor칤as (Consulta)
exports.listarCategorias = async (req, res) => {
    try {
        // En esta etapa, es crucial que la configuraci칩n de Handlebars en server.js 
        // est칠 correcta (runtimeOptions) para que los datos de Sequelize se muestren.
        const categorias = await mCategoria.findAll({
            order: [['nombre', 'ASC']]
        });
        
        res.render('category/listCategories', {
            layout: 'main',
            titulo: 'Gesti칩n de Categor칤as',
            categorias: categorias
        });
    } catch (error) {
        console.error("Error al listar categor칤as:", error);
        req.flash('varEstiloMensaje', 'alert-danger');
        req.flash('varMensaje', 'Error interno del servidor al cargar el listado.');
        res.redirect('/');
    }
};

// Funci칩n 2: Muestra el formulario de Creaci칩n (Alta)
exports.mostrarCrear = (req, res) => {
    res.render('category/createCategory', {
        layout: 'main',
        titulo: 'Crear Nueva Categor칤a'
    });
};

// Funci칩n 3: Procesa la Creaci칩n de una Categor칤a (Alta)
exports.crearCategoria = async (req, res) => {
    const { nombre } = req.body;

    try {
        await mCategoria.create({ nombre });
        
        req.flash('varEstiloMensaje', 'alert-success');
        req.flash('varMensaje', `Categor칤a "${nombre}" creada exitosamente.`);
        res.redirect('/categorias');
    } catch (error) {
        [cite_start]// Validaci칩n de unicidad requerida por el enunciado [cite: 44]
        if (error.name === 'SequelizeUniqueConstraintError') {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error: El nombre de la categor칤a ya existe.');
        } else {
            console.error("Error al crear categor칤a:", error);
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error al intentar crear la categor칤a. Int칠ntelo de nuevo.');
        }
        res.render('category/createCategory', {
            layout: 'main',
            titulo: 'Crear Nueva Categor칤a',
            nombre
        });
    }
};


// ----------------------------------------------------------------------
// 游뚿 FUNCIONES DE EDICI칍N Y ELIMINACI칍N COMPLETAS 游뚿
// ----------------------------------------------------------------------

// Funci칩n 4: Muestra el formulario de Edici칩n (Modificaci칩n)
exports.mostrarEditar = async (req, res) => {
    const { id } = req.params;
    try {
        const categoria = await mCategoria.findByPk(id);

        if (!categoria) {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Categor칤a no encontrada.');
            return res.redirect('/categorias');
        }

        res.render('category/editCategory', { 
            layout: 'main',
            titulo: `Editar Categor칤a: ${categoria.nombre}`,
            categoria // Pasamos el objeto para rellenar el formulario
        });
    } catch (error) {
        console.error("Error al mostrar la edici칩n:", error);
        req.flash('varEstiloMensaje', 'alert-danger');
        req.flash('varMensaje', 'Error al cargar el formulario de edici칩n.');
        res.redirect('/categorias');
    }
};

// Funci칩n 5: Procesa la Actualizaci칩n (Modificaci칩n)
exports.actualizarCategoria = async (req, res) => {
    const { id } = req.params;
    const { nombre } = req.body;

    try {
        const categoria = await mCategoria.findByPk(id);

        if (!categoria) {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error: Categor칤a no encontrada para actualizar.');
            return res.redirect('/categorias');
        }

        // Aplicamos la actualizaci칩n
        categoria.nombre = nombre;
        await categoria.save();

        req.flash('varEstiloMensaje', 'alert-success');
        req.flash('varMensaje', `Categor칤a "${nombre}" actualizada exitosamente.`);
        res.redirect('/categorias');
    } catch (error) {
        // Manejo de error de unicidad durante la edici칩n
        if (error.name === 'SequelizeUniqueConstraintError') {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error: El nombre de la categor칤a ya existe.');
        } else {
            console.error("Error al actualizar categor칤a:", error);
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error al intentar actualizar la categor칤a.');
        }
        // Redirige de vuelta al formulario de edici칩n si falla
        res.redirect(`/categorias/editar/${id}`);
    }
};

// Funci칩n 6: Procesa la Eliminaci칩n (Baja)
exports.eliminarCategoria = async (req, res) => {
    const { id } = req.params;

    try {
        const resultado = await mCategoria.destroy({
            where: { id }
        });

        if (resultado > 0) {
            req.flash('varEstiloMensaje', 'alert-warning');
            req.flash('varMensaje', 'Categor칤a eliminada exitosamente.');
        } else {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error: La categor칤a no pudo ser encontrada o ya fue eliminada.');
        }
        res.redirect('/categorias');
    } catch (error) {
        // Manejo de restricci칩n de clave for치nea (si hay productos asociados)
        if (error.name === 'SequelizeForeignKeyConstraintError') {
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'No se puede eliminar la categor칤a porque tiene productos asociados.');
        } else {
            console.error("Error al eliminar categor칤a:", error);
            req.flash('varEstiloMensaje', 'alert-danger');
            req.flash('varMensaje', 'Error interno al intentar eliminar la categor칤a.');
        }
        res.redirect('/categorias');
    }
};